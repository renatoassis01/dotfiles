export TERM=xterm-256color
export EDITOR="nvim"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command sh -c "$(curl -fsSL https://git.io/zinit-install)" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "${ZINIT_HOME}/zinit.zsh"

# Path to your oh-my-zsh installation.
export ZSH="/home/renato/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(git
         docker
         docker-compose
         node
         nvm
         aws
         command-not-found
         zsh-interactive-cd
         zsh-history-substring-search
         history-search-multi-word
         zsh-syntax-highlighting
         colored-man-pages
         zsh-autosuggestions)

# load oh-my-zsh
source $ZSH/oh-my-zsh.sh
export ZSH="/home/renato/.oh-my-zsh"

# Plugins
zinit light zdharma-continuum/fast-syntax-highlighting

# lazygit
zinit ice lucid wait"0" as"program" from"gh-r" mv"lazygit* -> lazygit"
zinit light jesseduffield/lazygit

# jq
zinit ice wait"1" lucid from"gh-r" as"program" mv"jq-* -> jq" pick"jq"
zinit light stedolan/jq

# yq
zinit ice wait"4" lucid from"gh-r" as"program" mv"yq* -> yq" pick"yq"
zinit light mikefarah/yq

# fzf
zinit ice lucid wait'0b' from"gh-r" as"program"
zinit light junegunn/fzf

# BurntSushi/ripgrep
zinit ice as"command" from"gh-r" mv"ripgrep* -> rg" pick"rg/rg"
zinit light BurntSushi/ripgrep

# sharkdp/fd
zinit ice as"program" from"gh-r" mv"fd* -> fd" pick"fd/fd"
zinit light sharkdp/fd

# sharkdp/bat
zinit ice as"command" from"gh-r" mv"bat* -> bat" pick"bat/bat"
zinit light sharkdp/bat

# dandavision/delta
zinit ice as"command" from"gh-r" mv"delta* -> delta" pick"delta/delta"
zinit light dandavison/delta

# fzf-tab
zinit light Aloxaf/fzf-tab

# docker-compose
zinit ice from"gh-r" as"program" mv"docker* -> docker-compose" bpick"*linux*"
zinit load docker/compose

# render markdown
zinit ice as"command" from"gh-r" bpick"*_linux_x86_64.tar.gz" pick"glow"
zinit light charmbracelet/glow

#bootandy/dust
zinit ice as"command" from"gh-r" mv"dust*unknown-linux-gnu/dust -> dust" pick"dust"
zinit light bootandy/dust

#sharkdp/hyperfine
zinit ice as"command" from"gh-r" mv"hyperfine*/hyperfine -> hyperfine" pick"sharkdp/hyperfine"
zinit light sharkdp/hyperfine

# wagoodman/dive
zinit ice as"command" from"gh-r" bpick"*_linux_amd64.tar.gz" pick"dive"
zinit light wagoodman/dive

#ogham/exa, replacement for ls
zinit ice as"command" from"gh-r" bpick"exa-linux-x86_64-musl-*" pick"bin/exa"
zinit light ogham/exa

#k8s tools


#LS_COLORS
zinit ice atclone"dircolors -b LS_COLORS > clrs.zsh" \
    atpull'%atclone' pick"clrs.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"'
zinit light trapd00r/LS_COLORS

zstyle ':fzf-tab:complete:_zlua:*' query-string input
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-preview 'ps --pid=$word -o cmd --no-headers -w -w'
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-flags '--preview-window=down:3:wrap'
zstyle ':fzf-tab:complete:kill:*' popup-pad 0 3
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle ':fzf-tab:complete:cd:*' popup-pad 30 0
zstyle ":completion:*:git-checkout:*" sort false
zstyle ':completion:*:exa' file-sort modification
zstyle ':completion:*:exa' sort false
zstyle ":fzf-tab:*" fzf-flags --color=bg+:23


# HISTORY
HISTSIZE=290000
SAVEHIST=$HISTSIZE

zstyle ":history-search-multi-word" page-size "8"                      # Number of entries to show (default is $LINES/3)
zstyle ":history-search-multi-word" highlight-color "fg=yellow,bold"   # Color in which to highlight matched, searched text (default bg=17 on 256-color terminals)
zstyle ":plugin:history-search-multi-word" synhl "yes"                 # Whether to perform syntax highlighting (default true)
zstyle ":plugin:history-search-multi-word" active "underline"          # Effect on active history entry. Try: standout, bold, bg=blue (default underline)
zstyle ":plugin:history-search-multi-word" check-paths "yes"           # Whether to check paths for existence and mark with magenta (default true)
zstyle ":plugin:history-search-multi-word" clear-on-cancel "no"        # Whether pressing Ctrl-C or ESC should clear entered query


# cloud tools
# lazyload kubectl -- 'source <(kubectl completion zsh)'
# lazyload stern -- 'source <(stern --completion=zsh)'
# lazyload helm -- 'source <(helm completion zsh)'

# Golang
export GO111MODULE=auto
export GOPATH=$HOME/workspace/go

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.local/bin:$HOME/bin:/usr/local/bin:/usr/local/go/bin:$GOPATH/bin:$PATH


#zinit path
export PATH=$HOME/.zinit/plugins:$PATH

#krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"


# Aliases
if [[ -r ~/.aliasrc ]]; then
    source ~/.aliasrc
fi

# Custom local config
if [[ -r ~/.zshlocal ]]; then
    source ~/.zshlocal
fi

# nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#kitty autocomplete
kitty + complete setup zsh | source /dev/stdin

export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true


# zoxide 
eval "$(zoxide init zsh)"





# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
